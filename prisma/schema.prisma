// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String     @unique
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  articles   Article[]  @relation("UserArticles")
  entries    Entry[]    @relation("UserEntries")
}

model Article {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  authors     String   
  category    String
  downloadUrl String
  description String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  author      User       @relation("UserArticles", fields: [authorId], references: [id])
  authorId    String     @db.ObjectId
  entries     Entry[]    @relation("ArticleEntries")
}

model Entry {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  content     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  author      User      @relation("UserEntries", fields: [authorId], references: [id])
  authorId    String    @db.ObjectId
  article     Article   @relation("ArticleEntries", fields: [articleId], references: [id], onDelete: Cascade)
  articleId   String    @db.ObjectId
}